# NOTE: Requires **VS2019 16.3** or later

# All Rules Enabled with default severity
# Description: All Rules are enabled with default severity. Rules with IsEnabledByDefault = false are force enabled with default severity.

# Code files
[*.{cs,vb}]
tab_width = 4
indent_size = 4
end_of_line = crlf
indent_style = tab

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = error

# Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = error

# Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = error

# Do not expose generic lists
dotnet_diagnostic.CA1002.severity = error

# Use generic event handler instances
dotnet_diagnostic.CA1003.severity = error

# Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = error

# Enums should have zero value
dotnet_diagnostic.CA1008.severity = error

# Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = error

# Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = error

# Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = none

# Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = error

# Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = error

# Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = error

# Avoid out parameters
dotnet_diagnostic.CA1021.severity = error

# Use properties where appropriate
dotnet_diagnostic.CA1024.severity = error

# Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = error

# Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = error

# Use events where appropriate
dotnet_diagnostic.CA1030.severity = error

# Do not catch general exception types
dotnet_diagnostic.CA1031.severity = error

# Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = error

# Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = error

# Nested types should not be visible
dotnet_diagnostic.CA1034.severity = error

# Override methods on comparable types
dotnet_diagnostic.CA1036.severity = error

# Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = error

# Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = error

# Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = error

# Properties should not be write only
dotnet_diagnostic.CA1044.severity = error

# Do not pass types by reference
dotnet_diagnostic.CA1045.severity = error

# Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = error

# Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = error

# Declare types in namespaces
dotnet_diagnostic.CA1050.severity = error

# Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = error

# Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = error

# URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = error

# URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = error

# URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = error

# Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = error

# Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = error

# Do not hide base class methods
dotnet_diagnostic.CA1061.severity = error

# Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = error

# Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = error

# Exceptions should be public
dotnet_diagnostic.CA1064.severity = error

# Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = error

# Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = error

# Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = error

# CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = error

# Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = error

# Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = error

# Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = error

# Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = error

# Specify CultureInfo
dotnet_diagnostic.CA1304.severity = error

# Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = error

# Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = error

# Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = error

# Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = error

# Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = error

# P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = error

# Validate platform compatibility
dotnet_diagnostic.CA1416.severity = none

# Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = error

# Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = error

# Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = error

# Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = error

# Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = error

# Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = error

# Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = error

# Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = error

# Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = error

# Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = error

# Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = error

# Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = error

# Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = error

# Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = error

# Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = error

# Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = error

# Identifier contains type name
dotnet_diagnostic.CA1720.severity = error

# Property names should not match get methods
dotnet_diagnostic.CA1721.severity = error

# Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = error

# Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = error

# Review unused parameters
dotnet_diagnostic.CA1801.severity = error

# Use literals where appropriate
dotnet_diagnostic.CA1802.severity = error

# Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = error

# Do not ignore method results
dotnet_diagnostic.CA1806.severity = error

# Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = error

# Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = error

# Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = error

# Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = error

# Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = error

# Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = error

# Properties should not return arrays
dotnet_diagnostic.CA1819.severity = error

# Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = error

# Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = error

# Mark members as static
dotnet_diagnostic.CA1822.severity = error

# Avoid unused private fields
dotnet_diagnostic.CA1823.severity = error

# Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = none

# Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = error

# Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = error

# Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = error

# Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = error

# Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = error

# Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = error

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = error

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = error

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = error

# Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = error

# Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = error

# Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = error

# Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = error

# Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = error

# Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = error

# Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = error

# Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = error

# Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = error

# Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = error

# Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = error

# Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = error

# Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = error

# Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = error

# Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = error

# Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = error

# Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = error

# Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = error

# Review visible event handlers
dotnet_diagnostic.CA2109.severity = error

# Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = error

# Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = error

# Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = error

# Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = error

# Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = error

# Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = error

# Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = error

# Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = error

# Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = error

# Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = error

# Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = error

# Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = error

# Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = error

# Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = error

# Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = error

# Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = error

# Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = error

# Collection properties should be read only
dotnet_diagnostic.CA2227.severity = error

# Implement serialization constructors
dotnet_diagnostic.CA2229.severity = error

# Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = error

# Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = error

# Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = error

# Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = error

# Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = error

# Test for NaN correctly
dotnet_diagnostic.CA2242.severity = error

# Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = error

# Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = error

# Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = error

# Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = error

# Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = error

# Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = error

# Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = error

# Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = error

# Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = error

# Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = error

# Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = error

# Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = error

# Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = error

# Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = error

# Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = error

# Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = error

# Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = error

# Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = error

# Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = error

# Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = error

# Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = error

# Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = error

# Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = error

# Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = error

# Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = error

# Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = error

# Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = error

# Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = error

# Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = error

# Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = error

# Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = error

# Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = error

# Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = error

# Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = error

# Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = error

# Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = error

# Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = error

# Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = error

# Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = error

# Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = error

# Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = error

# Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = error

# Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = error

# Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = error

# Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = error

# Insecure XSLT script processing.
dotnet_diagnostic.CA3076.severity = error

# Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = error

# Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = error

# Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = error

# Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = error

# Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = error

# Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = error

# Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = error

# Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = error

# Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = error

# Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = error

# Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = error

# Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = error

# Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = error

# Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = error

# Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = error

# Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = error

# Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = error

# Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = error

# Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = error

# Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = error

# Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = error

# Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = error

# Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = error

# Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = error

# Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = error

# Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = error

# Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = error

# Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = error

# Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = error

# Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = error

# Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = error

# Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = error

# Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = error

# Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = error

# Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = error

# Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = error

# Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = error

# Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = error

# Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = error

# Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = error

# Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = error

# Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = error

# Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = error

# Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = error

# Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = error

# HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = error

# Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = error

# Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = error

# Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = error

# Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = error

# Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3000.severity = error

# Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3001.severity = error

# Single line comment should begin with a space.
dotnet_diagnostic.SA1005.severity = none

# The code contains a tab or space character which is not consistent with the current project settings.
dotnet_diagnostic.SA1027.severity = none

# A call to an instance member of the local class or a base class is not prefixed with 'this.', within a C# code file.
dotnet_diagnostic.SA1101.severity = none

# A C# using directive is placed outside of a namespace element.
dotnet_diagnostic.SA1200.severity = none

# The using directives within a C# code file are not sorted alphabetically by namespace.
dotnet_diagnostic.SA1210.severity = warning

# The name of a C# element does not begin with an upper-case letter.
dotnet_diagnostic.SA1300.severity = none

# A field name in C# begins with an underscore.
dotnet_diagnostic.SA1309.severity = none

# A field name in C# contains an underscore.
dotnet_diagnostic.SA1310.severity = none

# A single-line comment within C# code is followed by a blank line.
dotnet_diagnostic.SA1512.severity = none

# Single-line commen should be preceded by a blank line
dotnet_diagnostic.SA1515.severity = none

# Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# A C# code file is missing a standard file header.
dotnet_diagnostic.SA1633.severity = none

# XML documentation file is not produced in project build output
dotnet_diagnostic.SA0001.severity = none

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_readonly_field = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

[*.cs]
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_space_around_binary_operators = before_and_after
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_prefer_static_local_function = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent
csharp_style_var_elsewhere = false:silent
csharp_style_prefer_primary_constructors = true:suggestion

# SA1208: System using directives should be placed before other using directives
dotnet_diagnostic.SA1208.severity = none
